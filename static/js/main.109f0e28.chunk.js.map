{"version":3,"sources":["components/Cards/Cards.jsx","Api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","className","style","borderBottom","color","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name","Charts","useState","SetDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","aria-label","defaultValue","onChange","e","target","selected","country","i","App","state","fetchedData","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.109f0e28.chunk.js","sourcesContent":["import React from 'react'\r\nimport CountUp from 'react-countup'\r\n\r\nconst Cards = ({data : {confirmed, recovered, deaths, lastUpdate}}) =>{\r\n    if(!confirmed){\r\n        return 'Loading... '\r\n    }\r\n    return(\r\n        <div>\r\n            <div className=\"container my-5\">\r\n        <div className=\"row\">\r\n        <div className=\"col-md-4 col-sm-6 col-xs-12\">\r\n          <div className=\"card\" style={{borderBottom: \"10px solid blue\"}}>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\" style={{color: \"#6c757d\"}}>Infected</h5>\r\n              <h4 className=\"card-text\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={confirmed.value}\r\n                    duration={2.5}\r\n                    separator=\",\"\r\n                  />\r\n              </h4>\r\n              <h5 className=\"card-text\" style={{color: \"#6c757d\"}}>{new Date(lastUpdate).toDateString()}</h5>\r\n              <p className=\"card-text\">No. of active cases of Covid-19</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4 col-sm-6 col-xs-12\">\r\n          <div className=\"card\" style={{borderBottom: \"10px solid green\"}}> \r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\" style={{color: \"#6c757d\"}}>Recovered</h5>\r\n            <h4 className=\"card-text\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={recovered.value}\r\n                    duration={2.5}\r\n                    separator=\",\"\r\n                  />\r\n                  </h4>\r\n              <h5 className=\"card-text\" style={{color: \"#6c757d\"}}>{new Date(lastUpdate).toDateString()}</h5>\r\n              <p className=\"card-text\">No. of recoveries from Covid-19</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4 col-sm-6 col-xs-12\">\r\n          <div className=\"card\" style={{borderBottom: \"10px solid red\"}}>\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\" style={{color: \"#6c757d\"}}>Deaths</h5>\r\n            <h4 className=\"card-text\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={deaths.value}\r\n                    duration={2.5}\r\n                    separator=\",\"\r\n                  />\r\n                  </h4>\r\n              <h5 className=\"card-text\" style={{color: \"#6c757d\"}}>{new Date(lastUpdate).toDateString()}</h5>\r\n              <p className=\"card-text\">No. of deaths caused by Covid-19</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async () => {\r\n    try{\r\n        const { data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(url);\r\n        return {confirmed, recovered, deaths, lastUpdate}\r\n    } catch (error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n\r\n        return modifiedData\r\n\r\n    } catch (error){\r\n\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((countries) => countries.name)\r\n    } catch (error){\r\n        console.log(error);\r\n    }\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {fetchDailyData} from '../../Api'\r\nimport {Line, Bar} from 'react-chartjs-2'\r\n\r\n\r\nconst Charts = () =>{\r\n    const [dailyData, SetDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            SetDailyData(await fetchDailyData());\r\n        }\r\n\r\n        // console.log(dailyData)\r\n\r\n        fetchAPI()\r\n    });\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n            <Line\r\n            data={{\r\n                labels: dailyData.map(({date}) => date ),\r\n                datasets: [{\r\n                    data : dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },\r\n                {\r\n                    data : dailyData.map(({deaths}) => deaths),\r\n                    label: 'Infected',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n            />): null\r\n    )\r\n    return(\r\n        <div className=\"container w-75\">\r\n            {lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Charts","import React,{useState, useEffect} from 'react'\r\nimport {fetchCountries} from '../../Api'\r\n\r\nconst CountryPicker = ({handleCountryChange }) =>{\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n\r\n    return(\r\n        <div>\r\n            <select className=\"form-select w-25 m-auto my-5\" aria-label=\"Default select example\" defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option selected>Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n                </select>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","import React from 'react'\r\nimport {Cards, CountryPicker, Charts} from './components'\r\nimport {fetchData} from  './Api'\r\nimport { useState } from 'react'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data : {},\r\n        countries: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data : fetchedData})\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        console.log(country)\r\n    }\r\n\r\n    render(){\r\n        const { data } = this.state;\r\n        return(\r\n        <div>\r\n            <Cards data={data} />\r\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n            <Charts />                              \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}